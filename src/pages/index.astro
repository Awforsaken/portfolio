---
import { contentfulClient } from "../lib/contentful";
import { documentToHtmlString } from "@contentful/rich-text-html-renderer";
import type { EntryFieldTypes, Asset } from "contentful";
import Layout from "../layouts/Layout.astro";

// Define the BlogPost interface for typing
export interface BlogPost {
  contentTypeId: "post",
  fields: {
    title: EntryFieldTypes.Text,
    size: EntryFieldTypes.Text,
    content: EntryFieldTypes.RichText,
    overview: EntryFieldTypes.RichText,
    titleImage: EntryFieldTypes.Text, // Image as an asset from Contentful
    tagging: EntryFieldTypes.Text[], // Assuming tagging is a text array of tag names or IDs
    slug: EntryFieldTypes.Text // Add slug field
  }}

// Fetch the blog post entries
const entries = await contentfulClient.getEntries<BlogPost>({
  content_type: "post",
});

// Manually define available tags
const availableTags = ['work','hobby']; 

---

<Layout>
  <div class="core-width outline">
    <div class="hero bg">
            <div class="svg-hero-spin">
        
<svg class="both" width="100%" height="100%" viewBox="0 0 418 418" fill="none" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <mask id="leftHalfMask">
      <!-- Show only left half: white = visible -->
      <rect x="0" y="0" width="209" height="418" fill="white" />
      <!-- right side is black by default (invisible) -->
    </mask>
    <mask id="rightHalfMask">
      <!-- Show only right half: white = visible -->
      <rect x="209" y="0" width="209" height="418" fill="white" />
      <!-- left side is black by default (invisible) -->
    </mask>
  </defs>
<path  class="svg-logo-circle" d="M252.5 275.563H252.313L252.42 275.729L251.58 276.271L231.58 245.271L232.42 244.729L251.5 274.302V143.215L166.422 276.769L166.1 276.563H165.5V142H166L166.421 141.729L208.998 208.071L251.5 141.354V141H252.5V275.563ZM166.5 274.784L208.406 209.001L166.5 143.705V274.784Z"/>
  <g class="right" mask="url(#rightHalfMask)">
    <path class="outside-line" d="M295 73L252 141.5"/>
    <path class="outside-line" d="M166 276.5L123.134 343"/>
    <path class="outside"  d="M56.7598 330.612L19.4053 166.955L124.067 35.7119L291.933 35.7119L396.596 166.955L359.241 330.612L208 403.446L56.7598 330.612Z"/>

    <g class="line-group">
      <path class="line" d="M90.5 101L316 326.5" />
      <path class="line" d="M90.5 101L187 16.5"/>
      <circle class="sm-circle" cx="90" cy="101" r="7.5" />
      <g class="outside-small-orbit">
        <circle cx="210" cy="49" r="39.5" />
        <path class="smol-square" d="M202.707 88L209 94.293L215.293 88L209 81.707L202.707 88Z" />
      </g>
    </g>

    <g>
      <circle class="offset-circle" cx="208" cy="169" r="119.5" />
    </g>

    <path class="seven-sides" d="M178.775 244.832L163.224 217.896L168.624 187.267L192.449 167.274L223.551 167.274L247.377 187.267L252.777 217.896L237.226 244.832L208 255.469L178.775 244.832Z"/>

    <g class="inside-orbit">
      <circle cx="209" cy="209" r="79.5"/>
      <path class="smol-triangle" d="M282.804 212L293.196 212L288 202.999L282.804 212Z" />
      
    </g>
    <path class="ten-sides" d="M114.631 303.37L75.542 209L114.631 114.631L209 75.542L303.37 114.631L342.459 209L303.37 303.37L209 342.459L114.631 303.37Z"/>
    <circle class="circle-medium" cx="209.5" cy="188.5" r="100" />
    <g>
      <circle class="large-circle" cx="209" cy="209" r="159.5" />
    </g>
  </g>
  <g class="left" mask="url(#leftHalfMask)">
        <path class="outside-line" d="M295 73L252 141.5"/>
    <path class="outside-line" d="M166 276.5L123.134 343"/>
    <path class="outside" d="M56.7598 330.612L19.4053 166.955L124.067 35.7119L291.933 35.7119L396.596 166.955L359.241 330.612L208 403.446L56.7598 330.612Z"/>
    <g class="line-group">
      <path class="line" d="M90.5 101L316 326.5" />
      <path class="line" d="M90.5 101L187 16.5" stroke="#D9A3F5" />
      <circle class="sm-circle" cx="90" cy="101" r="7.5" />
      <g class="outside-small-orbit">
        <circle cx="210" cy="49" r="39.5" />
        <path class="smol-square" d="M202.707 88L209 94.293L215.293 88L209 81.707L202.707 88Z" />
      </g>
    </g>

    <g>
      <circle class="offset-circle" cx="208" cy="169" r="119.5" />
    </g>

    <path class="seven-sides" d="M178.775 244.832L163.224 217.896L168.624 187.267L192.449 167.274L223.551 167.274L247.377 187.267L252.777 217.896L237.226 244.832L208 255.469L178.775 244.832Z" stroke="#D9A3F5" />

    <g class="inside-orbit">
      <path class="smol-triangle" d="M282.804 212L293.196 212L288 202.999L282.804 212Z" />
      <circle cx="209" cy="209" r="79.5" stroke="blue" />
    </g>
    <path class="ten-sides" d="M114.631 303.37L75.542 209L114.631 114.631L209 75.542L303.37 114.631L342.459 209L303.37 303.37L209 342.459L114.631 303.37Z"/>
    <circle class="circle-medium" cx="209.5" cy="188.5" r="100" />
    <g>
      <circle class="large-circle" cx="209" cy="209" r="159.5" />
    </g>
  </g>
</svg>

      </div>
      <h1 class="h1 spicy text-high"><span class="highlight-red">dan</span>ielius <br> </h1>
      <div class="text-low mono">a full stack UX & UI designer</div>
      <br>
      <div class="text-max text-high mono">
        curious creative who loves designing experiences, tinkering with code, game mastering/writing, and diving into probably-too-many arts and crafts projects.
      </div>
      <br>
      <div class="text-low mono tag">
        This website is work in progress.
      </div>
      
    </div>
  </div>

  <div class="outline">
    <div class="core-width outline h-2rem"></div>
  </div>
  <div class="outline">
    <div class="core-width outline bg">
      <div class="padded">
        <h1 class="h1 spicy">projects</h1>
        <span class="text-mid mono">all sorts of stuff i've done, in both professional and personal capacity </span>
      </div>


      <div id="tag-filters" class="outline two-grid">
        {availableTags.map(tag => (
          <label key={tag} class="tag-filter-option outline mono">
            <input type="checkbox" value={tag} checked/>
            <span>{tag}</span>
          </label>
        ))}
      </div>    
    </div>
  
  </div>
  <div class="outline">
    <div class="core-width outline">
      <!-- Display blog posts dynamically -->
      <div class="bento-container" id="post-container">
        {entries.items.map((item) => {
          const sizeClass = item.fields.size || 'size-small';
          const imageUrl = item.fields.titleImage?.fields.file.url;
          const postTags = item.fields.tagging || [];
          const tagClasses = postTags.map(tag => tag.replace(/\s+/g, '-').toLowerCase()).join(' ');
          const slug = item.fields.slug; // Fetch the slug from Contentful
      
          return (
            <a href={`/posts/${slug}`} key={slug} class={`bento-item outline ${sizeClass} ${tagClasses}`} 
                style={imageUrl ? `background-image: url(${imageUrl});` : ''}
                data-tags={postTags.join(',')}>  {/* Link to individual post using slug */}
              
                  <svg class="arrow" xmlns="http://www.w3.org/2000/svg" width="34" height="34" viewBox="0 0 34 34">
<path class="svg-arrow-tail" d="M4 14.9569H20L22 16.9569L20 18.9569H4V14.9569Z"/>
<path class="svg-arrow-top" d="M18.1716 4.3L26.6569 12.7853L23.8284 15.6137L15.3431 7.12843L18.1716 4.3Z"/>
<path class="svg-arrow-bot" d="M15.3431 26.7853L23.8284 18.3L26.6568 21.1284L18.1716 29.6137L15.3431 26.7853Z"/>
<path class="svg-arrow-mid" d="M25.1716 16.9569L28 14.1284L30.8284 16.9569L28 19.7853L25.1716 16.9569Z"/>
</svg>
                <div class="bento-info-card">
                  <h2 class="h5 mono">{item.fields.title}</h2>
                  {postTags.length > 0 && (
                  <div class="bento-tags">
                    {postTags.map(tag => (
                      <span key={tag} class="tag mono">{tag}</span>
                    ))}
                  </div>
                )}
                </div>
        

              
            </a>
          );
        })}

        <div class="no-results-message hidden padded bg outline mono">
          
            <p >select <br>something</p>
            <br> <p class="text-low">:(</p>
          
        </div>
      </div>
    </div>
  </div>

</Layout>
